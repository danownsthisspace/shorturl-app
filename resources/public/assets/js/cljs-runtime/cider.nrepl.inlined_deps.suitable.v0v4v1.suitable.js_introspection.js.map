{"version":3,"sources":["cider/nrepl/inlined_deps/suitable/v0v4v1/suitable/js_introspection.cljs"],"mappings":"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","names":["cider.nrepl.inlined-deps.suitable.v0v4v1.suitable.js-introspection/own-property-descriptors","js/Object","obj","js/Object.getOwnPropertyDescriptors","js/Object.getOwnPropertyNames","cljs.core.map","key","js/Object.getOwnPropertyDescriptor","cljs.core.into","cljs.core/clj->js","cider.nrepl.inlined-deps.suitable.v0v4v1.suitable.js-introspection/properties-by-prototype","protos","js/Object.getPrototypeOf","cljs.core.conj","var_args","G__44497","cider.nrepl.inlined-deps.suitable.v0v4v1.suitable.js-introspection/property-names-and-types","js/Error","js-obj","cider.nrepl.inlined_deps.suitable.v0v4v1.suitable.js_introspection.property_names_and_types","prefix","seen","cljs.core/transient","iter__5523__auto__","s__44499","cljs.core/LazySeq","temp__5720__auto__","cljs.core/seq","xs__6277__auto__","vec__44504","cljs.core/first","cljs.core.nth","map__44507","cljs.core/--destructure-map","cljs.core.get","iterys__5519__auto__","s__44501","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__44503","cljs.core/chunk-buffer","i__44502","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__44500","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","fs__5520__auto__","cljs.core.concat","iter__44498","i","_obj","props","cljs.core.map_indexed","cljs.core/vector","cljs.core/js-keys","cljs.core/not","cljs.core/empty?","clojure.string/starts-with?","prop","cider.nrepl.inlined_deps.suitable.v0v4v1.suitable.js_introspection.goog$module$goog$object.get","cljs.core.conj_BANG_","e44508","e44509","temp__5718__auto__","value","or__5045__auto__","cljs.core.apply","cljs.core/fn?","_e","cljs.core/chunk-first"],"sourcesContent":["(ns ^{:mranderson/inlined true} cider.nrepl.inlined-deps.suitable.v0v4v1.suitable.js-introspection\n  (:require [clojure.string :refer [starts-with?]]\n            [goog.object :refer [get] :rename {get oget}]))\n\n(def own-property-descriptors\n  (if (js-in \"getOwnPropertyDescriptors\" js/Object)\n    ;; ES 6+ version\n    (fn [obj] (js/Object.getOwnPropertyDescriptors obj))\n    ;; ES 5.1 version\n    (fn [obj] (->> obj\n                   js/Object.getOwnPropertyNames\n                   (map (fn [key] [key (js/Object.getOwnPropertyDescriptor obj key)]))\n                   (into {})\n                   clj->js))))\n\n(defn properties-by-prototype\n  \"\"\n  [obj]\n  (loop [obj obj protos []]\n    (if obj\n      (recur\n       (js/Object.getPrototypeOf obj)\n       (conj protos {:obj obj :props (own-property-descriptors obj)}))\n      protos)))\n\n(defn property-names-and-types\n  ([js-obj] (property-names-and-types js-obj nil))\n  ([js-obj prefix]\n   (let [seen (transient #{})]\n     (for [[i {:keys [_obj props]}] (map-indexed vector (properties-by-prototype js-obj))\n           key (js-keys props)\n           :when (and (not (get seen key))\n                      (or (empty? prefix)\n                          (starts-with? key prefix)))]\n       (let [prop (oget props key)]\n         (conj! seen key)\n         {:name key\n          :hierarchy i\n          :type (try\n                  (if-let [value (or (oget prop \"value\")\n                                     (-> prop (oget \"get\")\n                                         (apply [])))]\n                    (if (fn? value) \"function\" \"var\")\n                    \"var\")\n                  (catch js/Error _e \"var\"))})))))\n\n(comment\n  (require '[cljs.pprint :refer [pprint]])\n  ;; (-> js/console property-names-and-types pprint)\n  (-> js/document.body property-names-and-types pprint)\n\n  (let [obj (new (fn [x] (this-as this (goog.object/set this \"foo\" 23))))]\n    (pprint (property-names-and-types obj)))\n\n  (oget js/console \"log\")\n  (-> js/console property-names-and-types pprint)\n  (-> js/window property-names-and-types pprint))\n"]}