{"version":3,"sources":["app/core.cljs"],"mappings":";;AAQA,AAAA;AAAA,eAAA,iBAAAA,WAAA,8BAAAC,qBAAAC,9FAAOK;AAAP,AAAA,IAAAJ,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAAM,aAAwB,sBAAA,2CAAA,qDAAA,KAAA,kDAAA,7KAACI;YAAzB,AAAAH,4CAAAD,WAAA,IAAA,nEAAOE;gBAAP,AAAAD,4CAAAD,WAAA,IAAA,vEAAaG;IAEPE,aAAW;AAAA,AACE,OAAAC,wBAAA,AAAAC,2BAAA,MAAA,WAAAC;AAAA,AAAA,OAAAF,wBAAA,AAAAC,yiBAAA,WAAQG,zhBAAU,MAAA,NAACC,uBAA0B,qBAAA,2CAAA,2DAAA,2CAAA,qEAAA,2BAAA,uDAAA,OAAA,pUAACC,0XAEe,eAAA,fAACC,wBAA4B,AAAA,gFAAMX;AAFhG,AAAA,OAAAI,wBAAA,AAAAC,6CAAA,WAGQO,7BAAS,AAAOJ;AAHxB,AAAA,OAAAJ,wBAAA,AAAAC,uOAAA,WAIQQ,vNAAK,qHAAA,2EAAA,hMAACC,0DAAQF;AAJtB,AAAA,OAAAR,wBAAA,AAAAC,2BAAA,MAAA,WAAAE;AAAA,AAAA,OAAAF,2BAKE,iBAAAU,WAAWG;IAAXF,WAAA;IAAAC,WAAuB,AAAA,mFAAOJ;AAA9B,AAAA,0FAAAE,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAAChB,0CAAAA,sEAAAA;;;;;;;;IAChBkB,gBAAc,8DAAA,2IAAA,5JAAK,AAAUC,iEAAiB,AAAA,mFAAOpB;AAT3D,AA0JG,OAAA,AAAA6B,qCAAA,MAAA,iBAAAC,WAAA,EAAA,YAAA;AAAA,AAAAA;KA/IM,kBAAI,AAAA,mFAAO9B,sIACUmB,9EA8I3B,AAAA,AAAAU,qCAAA,IAAA,iBAAAE,WAAA,EAAA,vHAKA,AAAA,AAAAF,qCAAA,MAAA;AALA,AAAAE;KA9I0CZ,iLAEhB,AAAA,gFAAMnB,jMA4IhC,AAAA,AAAA6B,qCAAA,QAAA,iBAAAG,WAAA,EAAA,QAAA,AAAAC,sHAAA,WAAA,WAAAT,/QAKA,AAAA,AAAAK,qCAAA,MAAA;AAhJ+B,IAAAR,WAAWH,fA2I1C;IA3I+BI,WAAA;IAAAC,WAAsB,AAAA,AAAAC;AAAtB,AAAA,0FAAAH,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAACtB,0CAAAA,sEAAAA;GA2IhC,YAAA,mDAAA,cAAA;AAAA,AAAA+B;MAAA,AAAA,AAAAH,qCAAA,SAAA,iBAAAK,WAAA,EAAA,UAAA;AAxI+B,OAAC/B,PAwIhC;GAAA,YAAA;AAAA,AAAA+B;KAAA;;AA3JL,AAAA,GAAA,AAAAvC;AAAA,IAAAC,WAAAN;AAAA,AAAA,CAAA,AAAAM,uBAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOO,AAuBP,gBAAA,hBAAe4B;AAAf,AACE,IAAMC,OAAK,AAACC,gDAAgB,wBAAA,xBAACC;AAA7B,AACE,OAASF,iDAAQ7B,rCAuBR,AAAA,AAAAgC,kDAAA","names":["G__40911","props__30991__auto__","maybe-ref__30992__auto__","vec__40912","helix.core/extract-cljs-props","goog/DEBUG","G__40932","app.core/app","vec__40915","cljs.core.nth","state","set-state","helix.hooks/use-state","fetch-slug","promesa.protocols/-bind","promesa.protocols/-promise","___32907__auto__","___32892__auto__","_response","js/fetch","cljs.core/clj->js","js/JSON.stringify","response","data","cljs.core.js__GT_clj","G__40918","G__40919","G__40920","cljs.core/assoc","redirect-link","js/location","G__40927","G__40928","G__40929","p1__40909#","app.core/init","root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","helix.core/get-react","obj40922","obj40924","obj40926","helix.impl.props/or-undefined","obj40931"],"sourcesContent":["(ns app.core\n  (:require [helix.core :refer [defnc $]]\n            [helix.hooks :as hooks]\n            [helix.dom :as d]\n            [\"react-dom/client\" :as rdom]\n            [promesa.core :as p]))\n\n\n(defnc app []\n  (let [[state set-state] (hooks/use-state {:slug nil\n                                            :url \"\"})\n        fetch-slug (fn []\n                     (p/let [_response (js/fetch \"/api/redirect/\" (clj->js {:headers {:Content-Type \"application/json\"}\n                                                                            :method \"POST\"\n                                                                            :body (js/JSON.stringify #js {:url (:url state)})}))\n                             response (.json _response)\n                             data (js->clj response :keywordize-keys true)]\n                       (set-state assoc :slug (:slug data))))\n        redirect-link (str (.-origin js/location) \"/\" (:slug state) \"/\")]\n    (d/div {:class-name \"bg-pink-100 grid place-items-center h-screen\"}\n           (if (:slug state)\n             (d/div (d/a {:href redirect-link} redirect-link))\n             (d/div\n              (d/input {:value (:url state)\n                        :on-change #(set-state assoc :url (.. % -target -value))\n                        :class-name \"form-control border border-solid border-gray-600\"\n                        :placeholder \"Enter URL\"})\n              (d/button {:on-click #(fetch-slug)\n                         :class-name \"border-2 rounded  px-4 uppercase\"} \"Shorten Url\"))))))\n\n\n(defn ^:export init []\n  (let [root (rdom/createRoot (js/document.getElementById \"app\"))]\n    (.render root ($ app))))\n"]}